networks:
  default:
    name: docker-default-network
    external: true

services:

  postgres:
    image: postgres-xa:14.1
    build:
      context: src/test/docker/postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: customer
      POSTGRES_DB: customer
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
    mem_limit: 512m
    mem_reservation: 128m

  postgres-two:
    image: postgres-xa:14.1
    build:
      context: src/test/docker/postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: logentry
      POSTGRES_DB: logentry
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
    mem_limit: 512m
    mem_reservation: 128m


  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.8.1
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs


  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.8.1
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>quarkitecture</groupId>
    <artifactId>json-rest</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <properties>
        <compiler-plugin.version>3.11.0</compiler-plugin.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <maven.compiler.release>21</maven.compiler.release>
        <org.projectlombok.version>1.18.30</org.projectlombok.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.6.4</quarkus.platform.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.1.2</surefire-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm-panache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive-jsonb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sqids</groupId>
            <artifactId>sqids</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>uk.co.datumedge</groupId>
            <artifactId>hamcrest-json</artifactId>
            <version>0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>2.10.0.pr1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.10.0.pr1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <configuration>
                        <!-- for your ide: -->
                        <generatedSourcesDirectory>target/generated-sources/openapi/src/gen/main/java</generatedSourcesDirectory>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${org.projectlombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>io.quarkus</groupId>
                                <artifactId>quarkus-extension-processor</artifactId>
                                <version>${quarkus.platform.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <maven.home>${maven.home}</maven.home>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
        </profile>
        <profile>
            <id>zally</id>
            <activation>
                <property>
                    <name>zally</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.ethlo.zally</groupId>
                        <artifactId>zally-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <configuration>
                            <!--Configure
                    severities that fail the build. Default is MUST, SHOULD -->
                            <failOn>MUST</failOn>
                            <!-- The input file to validate -->
                            <source>src/main/resources/openapi/openapi.yaml</source>
                            <!--Ignore
                    certain rules. Default is none -->
                            <skipRules>
                                <skipRule>ApiAudienceRule</skipRule>
                                <skipRule>ApiIdentifierRule</skipRule>
                                <skipRule>CommonFieldTypesRule</skipRule>
                                <skipRule>FunctionalNamingForHostnamesRule</skipRule>
                                <skipRule>SecureAllEndpointsRule</skipRule>
                                <skipRule>SecureAllEndpointsWithScopesRule</skipRule>
                                <skipRule>NoVersionInUriRule</skipRule>
                            </skipRules>
                            <ruleConfigs>
                                <!-- NOTE: The rule elements' content can be written in JSON or YAML -->
                                <PluralizeResourceNamesRule>
                                    whitelist:
                                    - current
                                    - self
                                </PluralizeResourceNamesRule>
                            </ruleConfigs>
                            <!-- Alternatively rules can be configured with configuration file -->
                            <!-- <rulesConfigLocation>reference.conf</rulesConfigLocation> -->
                            <!-- Write the result of the validation to file. Optional-->
                            <resultFile>target/api_validation_result.txt</resultFile>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>report</goal>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <!-- The pluggable rule-set you want to run -->
                                <groupId>org.zalando</groupId>
                                <artifactId>zally-ruleset-zalando</artifactId>
                                <version>2.1.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>openapi-generator</id>
            <activation>
                <property>
                    <name>openapi-generator</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <!-- RELEASE_VERSION -->
                        <version>7.11.0</version>
                        <!-- /RELEASE_VERSION -->
                        <executions>
                            <execution>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generatorName>jaxrs-spec</generatorName>
                                    <verbose>true</verbose>
                                    <apiPackage>de.deutsche.api</apiPackage>
                                    <modelPackage>de.deutsche.model</modelPackage>
                                    <inputSpec>${project.basedir}/src/main/resources/openapi/openapi.yaml</inputSpec>
                                    <configOptions>
                                        <sourceFolder>src/gen/main/java</sourceFolder>
                                        <useJakartaEe>true</useJakartaEe>
                                        <interfaceOnly>false</interfaceOnly>
                                        <openApiSpecFileLocation>target/openapi/openapi.yaml</openApiSpecFileLocation>
                                        <useSwaggerAnnotations>false</useSwaggerAnnotations>
                                        <SecureAllEndpointsRule></SecureAllEndpointsRule>
                                        <useMicroProfileOpenAPIAnnotations>true</useMicroProfileOpenAPIAnnotations>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                        <!-- <configuration>
                            <generatorName>jaxrs-spec</generatorName>
                            <configOptions>
                                <bigDecimalAsString>true</bigDecimalAsString>
                                <dateLibrary>java8</dateLibrary>
                                <additionalModelTypeAnnotations>@lombok.Generated @lombok.Builder(toBuilder = true)
                                    @lombok.NoArgsConstructor
                                    @lombok.AllArgsConstructor</additionalModelTypeAnnotations>
                                <interfaceOnly>true</interfaceOnly>
                                <openApiSpecFileLocation>src/main/resources/META-INF/openapi/openapi.yaml</openApiSpecFileLocation>
                                <useJakartaEe>true</useJakartaEe>
                                <useSwaggerAnnotations>true</useSwaggerAnnotations>
                                <returnResponse>true</returnResponse>
                            </configOptions>
                        </configuration> -->
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-generated</id>
            <activation>
                <property>
                    <name>run-generated</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../../../partial/main/java</source>
                                        <source>src/gen/main/java</source>
                                        <source>../../../src/main/resources</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../../../partial/test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>